/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.eswinggolf.portal.data.layer.club.model;

import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the ESShotDataSharing service. Represents a row in the &quot;es_ESShotDataSharing&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.eswinggolf.portal.data.layer.club.model.impl.ESShotDataSharingModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.eswinggolf.portal.data.layer.club.model.impl.ESShotDataSharingImpl}.
 * </p>
 *
 * <p>
 * Never modify or reference this interface directly. All methods that expect a e s shot data sharing model instance should use the {@link ESShotDataSharing} interface instead.
 * </p>
 *
 * @author evangelistalc
 * @see ESShotDataSharing
 * @see com.eswinggolf.portal.data.layer.club.model.impl.ESShotDataSharingImpl
 * @see com.eswinggolf.portal.data.layer.club.model.impl.ESShotDataSharingModelImpl
 * @generated
 */
public interface ESShotDataSharingModel extends BaseModel<ESShotDataSharing> {
	/**
	 * Gets the primary key of this e s shot data sharing.
	 *
	 * @return the primary key of this e s shot data sharing
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this e s shot data sharing
	 *
	 * @param pk the primary key of this e s shot data sharing
	 */
	public void setPrimaryKey(long pk);

	/**
	 * Gets the shot data sharing id of this e s shot data sharing.
	 *
	 * @return the shot data sharing id of this e s shot data sharing
	 */
	public long getShotDataSharingId();

	/**
	 * Sets the shot data sharing id of this e s shot data sharing.
	 *
	 * @param shotDataSharingId the shot data sharing id of this e s shot data sharing
	 */
	public void setShotDataSharingId(long shotDataSharingId);

	/**
	 * Gets the shot data id of this e s shot data sharing.
	 *
	 * @return the shot data id of this e s shot data sharing
	 */
	public long getShotDataId();

	/**
	 * Sets the shot data id of this e s shot data sharing.
	 *
	 * @param shotDataId the shot data id of this e s shot data sharing
	 */
	public void setShotDataId(long shotDataId);

	/**
	 * Gets the player id of this e s shot data sharing.
	 *
	 * @return the player id of this e s shot data sharing
	 */
	public long getPlayerId();

	/**
	 * Sets the player id of this e s shot data sharing.
	 *
	 * @param playerId the player id of this e s shot data sharing
	 */
	public void setPlayerId(long playerId);

	/**
	 * Gets the user id of this e s shot data sharing.
	 *
	 * @return the user id of this e s shot data sharing
	 */
	public long getUserId();

	/**
	 * Sets the user id of this e s shot data sharing.
	 *
	 * @param userId the user id of this e s shot data sharing
	 */
	public void setUserId(long userId);

	/**
	 * Gets the user uuid of this e s shot data sharing.
	 *
	 * @return the user uuid of this e s shot data sharing
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this e s shot data sharing.
	 *
	 * @param userUuid the user uuid of this e s shot data sharing
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Gets the company id of this e s shot data sharing.
	 *
	 * @return the company id of this e s shot data sharing
	 */
	public long getCompanyId();

	/**
	 * Sets the company id of this e s shot data sharing.
	 *
	 * @param companyId the company id of this e s shot data sharing
	 */
	public void setCompanyId(long companyId);

	/**
	 * Gets the group id of this e s shot data sharing.
	 *
	 * @return the group id of this e s shot data sharing
	 */
	public long getGroupId();

	/**
	 * Sets the group id of this e s shot data sharing.
	 *
	 * @param groupId the group id of this e s shot data sharing
	 */
	public void setGroupId(long groupId);

	/**
	 * Gets the active of this e s shot data sharing.
	 *
	 * @return the active of this e s shot data sharing
	 */
	public boolean getActive();

	/**
	 * Determines if this e s shot data sharing is active.
	 *
	 * @return <code>true</code> if this e s shot data sharing is active; <code>false</code> otherwise
	 */
	public boolean isActive();

	/**
	 * Sets whether this {$entity.humanName} is active.
	 *
	 * @param active the active of this e s shot data sharing
	 */
	public void setActive(boolean active);

	/**
	 * Gets the create date of this e s shot data sharing.
	 *
	 * @return the create date of this e s shot data sharing
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this e s shot data sharing.
	 *
	 * @param createDate the create date of this e s shot data sharing
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Gets the modify date of this e s shot data sharing.
	 *
	 * @return the modify date of this e s shot data sharing
	 */
	public Date getModifyDate();

	/**
	 * Sets the modify date of this e s shot data sharing.
	 *
	 * @param modifyDate the modify date of this e s shot data sharing
	 */
	public void setModifyDate(Date modifyDate);

	/**
	 * Gets a copy of this e s shot data sharing as an escaped model instance by wrapping it with an {@link com.liferay.portal.kernel.bean.AutoEscapeBeanHandler}.
	 *
	 * @return the escaped model instance
	 * @see com.liferay.portal.kernel.bean.AutoEscapeBeanHandler
	 */
	public ESShotDataSharing toEscapedModel();

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public void setEscapedModel(boolean escapedModel);

	public Serializable getPrimaryKeyObj();

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(ESShotDataSharing esShotDataSharing);

	public int hashCode();

	public String toString();

	public String toXmlString();
}